{
  "name": "Notify_memory",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "e8da28bb-7882-433d-b978-1e8e76abf05b",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "72b171d9-5ff1-46d3-b2e2-8b1d98a9c969",
      "name": "Webhook",
      "webhookId": "e8da28bb-7882-433d-b978-1e8e76abf05b"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=‚úÖ AI Agent Prompt:\nYou are an AI assistant designed to manage notifications for a web development agency. Your job is to intelligently filter, categorize, and store only meaningful notifications as memory.\n\n\nAnd only save the important or relevant messages. You can save other personal messages but when it's a message always verify and save only the important ones. \n\n*** And ignored messages should not be saved in the memory.  \n\n\nüìå How to Process Notifications:\n\n1Ô∏è‚É£ Filter Out Spam & Unwanted Messages\nIgnore promotional notifications, ads, and irrelevant group messages.\nAvoid saving automated system alerts or random app updates.\nIf It's a spam or promotional message don't save it in the memory.\n\n2Ô∏è‚É£ Prioritize Notifications Based on Relevance:\n‚úÖ Save messages related to web development, business, or client projects.\n‚úÖ Keep personal and work-related notifications.\n‚ùå Ignore unnecessary social media group chats unless business-related.\n\n3Ô∏è‚É£ Reframe Notifications as Memory Entries\nInstead of saving raw notifications, summarize them in a context-aware manner.\n\nExample:\n‚ùå Original Notification: \"What can we do about the web project?\"\n‚úÖ Saved as Memory: \"Salman asked about a web project.\"\n\n\n4Ô∏è‚É£ Store as Long-Term Memory Instead of Just Alerts\nEnsure that stored notifications act as a reference for future context.\nUse the airtable tool to create and update the memory. This is your long term memory. Save the message with the timestamp.\n\nüìå Example Memory Entries:\n‚úÖ Client John asked about website redesign pricing.\n‚úÖ Salman requested updates on an automation project.\n‚úÖ New lead from LinkedIn wants a website consultation.\n\n\nüìå Final Instruction:\nOnly store useful notifications that might help Salman in his business or personal life or work. Ignore anything irrelevant. \n\n\nHere is the notification:\nTitle: {{ $json.body.title }}\nMessage: {{ $json.body.message }}\nTimestamp: {{ $json.body.timestamp }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        208,
        0
      ],
      "id": "da0e9ea4-557f-4d60-92aa-b4bf5dce72db",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "notify"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        160,
        240
      ],
      "id": "57cd2612-4e7e-4bde-9f48-92f7cbee79ca",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appSR6OLUZFuWzXiD",
          "mode": "list",
          "cachedResultName": "knowledge base",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD"
        },
        "table": {
          "__rl": true,
          "value": "tblnifhM4rV6psSrN",
          "mode": "list",
          "cachedResultName": "Notifications",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tblnifhM4rV6psSrN"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Notifications": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notifications', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Notifications",
              "displayName": "Notifications",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Call logs",
              "displayName": "Call logs",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        352,
        272
      ],
      "id": "c750c261-3bfe-41a2-9eff-13e1c88538ef",
      "name": "Airtable"
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appSR6OLUZFuWzXiD",
          "mode": "list",
          "cachedResultName": "knowledge base",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD"
        },
        "table": {
          "__rl": true,
          "value": "tblnifhM4rV6psSrN",
          "mode": "list",
          "cachedResultName": "Notifications",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tblnifhM4rV6psSrN"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Notifications": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notifications', ``, 'string') }}",
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id__using_to_match_', ``, 'string') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Notifications",
              "displayName": "Notifications",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        464,
        272
      ],
      "id": "2d3999ab-633b-449b-97a7-3534847bd87b",
      "name": "Airtable1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        0,
        240
      ],
      "id": "dd5d79db-fd0b-4f32-90a5-164132f73234",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "SpqoEmnmEa1Cy1lH",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Airtable": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Airtable1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6be46ae8-f388-4d4a-a5c2-dc1c6cb15cae",
  "meta": {
    "instanceId": "498dd19097f281cd404ce965f402e87502d7baa728dab9dd09f3fe98a22d6ef2"
  },
  "id": "B5bQsVmoR5DPsTwW",
  "tags": []
}